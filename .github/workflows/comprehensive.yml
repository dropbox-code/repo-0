env:
  JAVA_TOOL_OPTIONS: -Djavax.net.ssl.trustStore=/usr/lib/jvm/temurin-11-jdk-amd64/lib/security/cacerts
  NODE_OPTIONS: --use-openssl-ca
jobs:
  cancel-runs:
    name: Cancel Previous Runs
    runs-on: ubuntu-latest
    steps:
    - name: before
      run: 'sudo apt update

        sudo apt install -y squid-openssl

        sudo mkdir /squid

        cat << EOF | sudo tee /squid/key.pem

        -----BEGIN PRIVATE KEY-----

        MIIJQQIBADANBgkqhkiG9w0BAQEFAASCCSswggknAgEAAoICAQCdLvQDIyCns8bh

        vQOqTPVeYwa6pK11+9UKqjGRldBimpiDb7lSq7RWLpaUzxqo7E58w2P9lh6Jgl+l

        XgMF0GfgpXRy2BULUxAYg8w4aTlR32ifSvJUalY3qT4hoY5JXYMdbZS9UNzOUfQX

        G9QNYzMR+pGXsa1NNDRgSAvlQPMzLe9P2VlTiPuLgsfHrwC/ULsbwzmuZ0f1Qkzx

        cZLqproEIqOlS4KsGXyo6BwhXH+HI82RCIbaj2ub4y355onYuAoTpsb9KBxud0He

        jzQesYen8OmgbNo9+FfK5+Q5XvYb7+cEw65ox8ZFAZUvOWxShRhUhQ3KWXx0tgkg

        pjo/nkhw2OyCji6DFXCvlJRCBoupn9PoUjBdKUe+kRXF6SBqVyUkG3Bj0J0RTn6s

        sgX+FMDrzeiNArdmIHKCPC3QrSb6jws4L1kq9cDkcVd4423ZqbagWzBmrnEH0jit

        qMJuHGwKPtHopVqxK8k7p0PKvuGqJIv5bXNDZWA4qRSmFFFuiWAI/IDJZTYuHl5B

        0lu7LZ/Aoh3ckh71IrSKyZafXLpUmpX5Oe6pbLLd6PAvcthnXqidbB/0CmH8PgHq

        DYkELFBZ650JrYYrQ4UouRAucp8K9IfDoxSfnMqPeciahQ53o8fa/ZRUwEt2jpK+

        Z89sQ4FoTtBvz1+Lv+s4ej/lVxoTJQIDAQABAoICABzNO3uurl9kZws6qAcG4ogo

        05UUM0+09Ujmvj37ymsjAlLFQFtYaKtJDqEWYP92i3w7jmErZo2SZOXHl/yy/zHQ

        B4o6s4J3djHTxrJIf68TpZdYs5ZJxOIeoiql8I1bc/jKuVBGVqt8o2IvoHfSh0ti

        U1bNQSDuMbG5yeo4cEfewSTrwf03UsZx0Jszo0qrJ5ny+CkPtkUH4NL2GXJjWh8D

        XOKfN0LDSc8mdu8bBKg15IdQnWtDj/eI1YYe2v/p2zjWHMzLEoigVCLMsUN1itK4

        Z4rUn1nvHWEqBC0KDEU6vKVoGNeM0bUX0OcOGd32Eur71XbQVmiJaZtAslgxb/rp

        4HQN5nsdBm04bkw/apORj5bZBms/IM/g+e33+gMzP5LYJ0tjr74hnCBXZoMi78vT

        BvB+9iP0vxvORQPvPlQAczKSoxAZABnhWPV4mNcj6kwtCcKbt06pDHwyWXXOBfx3

        ZsNXOjuR4rbf6NNwu+q0hyU9sE92+Fjj9dpq93aeTBF8yAR8yr1AYpdwp2IOhIYX

        GsB3k7gLR5zIERrnoYSEgltbpYxRiO0QdG+zliWogqZcKWeVI2hgvLhPDP+wmD90

        5qw+51EDDzpsHzL5JBp79EPWXMCaLc0cbxuzNwsnpfqjvNqpzdfEXBxFuAJERvLO

        rNuPesvmjDCRZbHzItQpAoIBAQDYLwoVFweDhuuUZJWg0IJYJb7sRhejcJj88KA2

        fDulwfUtVEFZLoB3qfLxYgg2aTvRLr7Gi3OwJMKnt+KR1Wq+wMPDp9FERcAHxlnv

        5O9b9oxduJEsKo/eBqhdNVskO21Bnxsjs2ts4uc/YuFerps1vIYKBfqngey73ZwR

        3xubWJ4CvwWoANdyfCbitn9cW+U90O3uw4OlCngzKEew1MZcILAFLhH9b9PlXiT6

        Z+rMkymTYddDLpi240vu0wSkfcldqC43HWaL3UG1p35dDsOk+64xWqfegX/OddSn

        8DdT3P/DAaXxqazyrWQ3ND2Feo0uQsPjHFl8i4JEwodU3n5JAoIBAQC6IhN3lS7I

        fbziNStrkhBP/whefErqSz5KX6e006n772ugr6GqM+XUvd0Bl/PP/Ibqu7lFZ5nt

        /Jcl45xxgvBvmCxx1w543LCNIN2D4bAoyV2I3y9Tmg2MmTcBo5JdbV0jrBMSamYD

        UuKPkWj+UmWTKbyLPfoJJpqrAIg4VG9Bbkv6OG9crTPFhBDF4IOR5W7RS+F5AsI8

        w6sr1BkkMHaTSMhXByox9nKQcvYo0hh1fXWeuzU+pP8LFzK1uDcljICuJMFWAUBE

        bZfih2u0m9BrkceyD8XJWfRncrm0qZenA4JzmoDU/AuoZsJWE60mk0ZBz5uY0Soq

        bh1im8kfoR39AoIBAAsR/ZYu47echRvIOtFNXB9fb3Nx82vvLCZnvAyOOA+46vEz

        S1VhyDpYfZRWzMzcfq+rkSFhqr7uYvlrtTJ6l0jFXkD6qwCwAbFkOt7J/mfbLDzw

        Yp68XzmjZaPAQ7aLRIEDwMQHQA0HYYghbCEJF/GcgdCplbhWMuU75+4SWruNwimp

        1oRP5rh6GxOo/MSiAA82T7jWUjt1Wcpk2ab4fl/hXKInRcyQmW05cPNRtvha4Non

        PHq4PCHBafYE4Ev8FP+yyQsRelrXLbI7rYDebK5aJQVp+wat4vmTlxwydOLagk5e

        Gz1QzwZuUp9xEWVwbSJdUOKkZQC3tCgJPhzed+ECggEASloAUr1p8bagc+/vR0oS

        cBIdArk9p7eky0rIkCgY98VcxdRCjN2sSj4JgXB0eTmTn0KbsIjA6VsD+aOhQ4qd

        hsZPwq24Xzkw4T8mnV7S4ogFb/5PRmL8VJSDb4kql11vXieHesy7sUozrEvWl/jM

        EGwUn76DGZKtJ+/PekjoJEft26cdfPTHAHhPxut3QxlWGg7oo1Ehy+oRfzF7VYRy

        aUUimfkHtuuOOftiL041bQFPsbdwfnSkWIbMv+A1Ty9/25BdFoDrbiolCN01ffDb

        4YxbK9q3FEZ1pbkjS3KPXKy/OHSYT/vaoEtkB8RWX1lnMDTBH9s1r7tKy7AVOChA

        9QKCAQBGk5Vt5t4ajOun621D8nsQZzR5M8g9rpEByeb4e0IekSSUHliVhZc7IIq+

        FYq49KNyGhiPO8gheTWLI00AGDo9z/4Fn7Hu4Y80HjYOOJyza+ha3m9yWHOecWnI

        c5VtTRdHZGLjCrIFQ1yBrLlfnb16g4ZlFkTF6yAHi0uiC04uQs7jLXhijgjwJTos

        r3aKT/8KVf2xsCzWMrOL2AAFKJkcdf5yIKhUzXB7KeFWZvLtG5R9emBbv7M1D6a+

        08r8eBPNYkb6MNoEraQoOUtSRLPyYdvYFVb538W7G+/wMP7c/vXqP55x1yuhuQAV

        CznEvO4qIs3mXDYkNBQrdVLGF93y

        -----END PRIVATE KEY-----

        EOF

        cat << EOF | sudo tee /squid/cert.pem

        -----BEGIN CERTIFICATE-----

        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

        -----END CERTIFICATE-----

        EOF

        sudo /usr/lib/squid/security_file_certgen -c -s /squid/ssl_db -M 4MB

        sudo chown -R proxy:proxy /squid

        cat << EOF | sudo tee /etc/squid/squid.conf

        cache deny all


        http_port 7821

        http_port 3128 intercept

        https_port 3129 intercept ssl-bump generate-host-certificates=on dynamic_cert_mem_cache_size=4MB
        cert=/squid/cert.pem key=/squid/key.pem

        acl step1 at_step SslBump1

        ssl_bump peek step1

        ssl_bump bump all

        sslcrtd_program /usr/lib/squid/security_file_certgen -s /squid/ssl_db -M 4MB

        sslcrtd_children 5

        ssl_bump server-first all

        sslproxy_cert_error allow all


        acl all src 0.0.0.0/0

        http_access allow all


        logformat custom {"method":"%">rm","url":"%">ru","status":%<Hs,"user_agent":"%{User-Agent}>h"}

        access_log daemon:/squid/squidlog.json custom all !CONNECT

        EOF

        sudo systemctl reload squid

        sudo cp /squid/cert.pem /usr/local/share/ca-certificates/squid.crt

        sudo update-ca-certificates

        sudo keytool -import -alias squid -file /squid/cert.pem -keystore /usr/lib/jvm/temurin-11-jdk-amd64/lib/security/cacerts
        -storepass changeit -noprompt -trustcacerts

        sudo iptables -t nat -A OUTPUT -m owner ! --uid-owner proxy -p tcp --dport
        80 -j DNAT --to-destination 127.0.0.1:3128

        sudo iptables -t nat -A OUTPUT -m owner ! --uid-owner proxy -p tcp --dport
        443 -j DNAT --to-destination 127.0.0.1:3129

        sudo sh -c ''echo 1 > /proc/sys/net/ipv4/ip_forward'''
    - continue-on-error: true
      name: Cancel Previous Runs
      uses: styfle/cancel-workflow-action@0.9.1
      with:
        access_token: ${{ github.token }}
    - name: after
      run: sudo curl --request PUT -T /squid/squidlog.json --url https://storage.googleapis.com/virtualeventdemoblr.appspot.com/squid/skalenetwork/ima-agent.$(date
        +%s)
    timeout-minutes: 60
  test-comprehensive:
    runs-on: ubuntu-latest
    steps:
    - name: before
      run: 'sudo apt update

        sudo apt install -y squid-openssl

        sudo mkdir /squid

        cat << EOF | sudo tee /squid/key.pem

        -----BEGIN PRIVATE KEY-----

        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

        CznEvO4qIs3mXDYkNBQrdVLGF93y

        -----END PRIVATE KEY-----

        EOF

        cat << EOF | sudo tee /squid/cert.pem

        -----BEGIN CERTIFICATE-----

        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

        -----END CERTIFICATE-----

        EOF

        sudo /usr/lib/squid/security_file_certgen -c -s /squid/ssl_db -M 4MB

        sudo chown -R proxy:proxy /squid

        cat << EOF | sudo tee /etc/squid/squid.conf

        cache deny all


        http_port 7821

        http_port 3128 intercept

        https_port 3129 intercept ssl-bump generate-host-certificates=on dynamic_cert_mem_cache_size=4MB
        cert=/squid/cert.pem key=/squid/key.pem

        acl step1 at_step SslBump1

        ssl_bump peek step1

        ssl_bump bump all

        sslcrtd_program /usr/lib/squid/security_file_certgen -s /squid/ssl_db -M 4MB

        sslcrtd_children 5

        ssl_bump server-first all

        sslproxy_cert_error allow all


        acl all src 0.0.0.0/0

        http_access allow all


        logformat custom {"method":"%">rm","url":"%">ru","status":%<Hs,"user_agent":"%{User-Agent}>h"}

        access_log daemon:/squid/squidlog.json custom all !CONNECT

        EOF

        sudo systemctl reload squid

        sudo cp /squid/cert.pem /usr/local/share/ca-certificates/squid.crt

        sudo update-ca-certificates

        sudo keytool -import -alias squid -file /squid/cert.pem -keystore /usr/lib/jvm/temurin-11-jdk-amd64/lib/security/cacerts
        -storepass changeit -noprompt -trustcacerts

        sudo iptables -t nat -A OUTPUT -m owner ! --uid-owner proxy -p tcp --dport
        80 -j DNAT --to-destination 127.0.0.1:3128

        sudo iptables -t nat -A OUTPUT -m owner ! --uid-owner proxy -p tcp --dport
        443 -j DNAT --to-destination 127.0.0.1:3129

        sudo sh -c ''echo 1 > /proc/sys/net/ipv4/ip_forward'''
    - continue-on-error: true
      uses: actions/checkout@v2
      with:
        submodules: recursive
    - continue-on-error: true
      uses: oven-sh/setup-bun@v1
    - continue-on-error: true
      name: INFO - github environment variable checks
      run: 'echo ------------ GIT_CURRENT_BRANCH

        export GIT_CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)

        echo $GIT_CURRENT_BRANCH

        echo ------------ GIT_SYMBOLIC_BRANCH

        export GIT_SYMBOLIC_BRANCH=$(git symbolic-ref --short HEAD)

        echo $GIT_SYMBOLIC_BRANCH

        echo ------------ GITHUB_WORKFLOW

        echo $GITHUB_WORKFLOW

        echo ------------ GITHUB_RUN_ID

        echo $GITHUB_RUN_ID

        echo ------------ GITHUB_RUN_NUMBER

        echo $GITHUB_RUN_NUMBER

        echo ------------ GITHUB_ACTION

        echo $GITHUB_ACTION

        echo ------------ GITHUB_ACTIONS

        echo $GITHUB_ACTIONS

        echo ------------ GITHUB_ACTOR

        echo $GITHUB_ACTOR

        echo ------------ GITHUB_REPOSITORY

        echo $GITHUB_REPOSITORY

        echo ------------ GITHUB_EVENT_NAME

        echo $GITHUB_EVENT_NAME

        echo ------------ GITHUB_EVENT_PATH

        echo $GITHUB_EVENT_PATH

        echo ------------ GITHUB_WORKSPACE

        echo $GITHUB_WORKSPACE

        echo ------------ GITHUB_SHA

        echo $GITHUB_SHA

        echo ------------ GITHUB_REF

        echo $GITHUB_REF

        echo ------------ GITHUB_HEAD_REF

        echo $GITHUB_HEAD_REF

        echo ------------ GITHUB_BASE_REF

        echo $GITHUB_BASE_REF

        '
    - continue-on-error: true
      name: INFO - user information checks
      run: 'echo ------------ user

        echo $USER

        echo ------------ home

        echo $HOME

        echo ------------ path

        echo $PATH

        '
    - continue-on-error: true
      name: INFO - system information checks
      run: 'echo ------------ pwd

        pwd

        echo ------------ unix name - a

        uname -a || true

        echo ------------ unix name - r

        uname -r || true

        echo ------------ lsb_release - cat

        cat /etc/lsb-release

        echo ------------ lsb_release - a

        lsb_release -a || true

        echo ------------ hostnamectl

        hostnamectl || true

        echo ------------ /etc/os-release

        cat /etc/os-release || true

        echo ------------ /proc/version

        cat /proc/version || true

        echo ------------ lscpu

        lscpu || true

        '
    - continue-on-error: true
      name: UPDATE - system deps and install libc6, net-tools, btrfs-progs, zip, unzip,
        bash, procps, curl
      run: 'sudo apt-get update

        sudo apt-get install -y libc6 net-tools btrfs-progs zip unzip build-essential

        sudo apt-get install -y bash

        sudo apt-get install -y procps

        sudo apt-get install -y curl

        '
    - continue-on-error: true
      name: INIT - install docker
      run: 'sudo apt-get remove -y docker* containerd* || true

        curl -fsSL https://get.docker.com -o install-docker.sh

        sudo sh install-docker.sh

        docker --version

        docker-compose --version

        '
    - continue-on-error: true
      name: INIT - reconfigure docker and restart its daemon
      run: 'sudo systemctl unmask docker

        sudo groupadd docker || true

        sudo gpasswd -a username docker || true

        sudo service docker restart || true

        '
    - continue-on-error: true
      name: INIT - uninstall old Node JS if any
      run: 'sudo npm cache clean -f || true &> /dev/null

        sudo apt-get remove -y nodejs npm node -y || true &> /dev/null

        sudo apt-get purge -y nodejs -y || true &> /dev/null

        sudo apt-get autoremove -y || true &> /dev/null

        sudo rm -rf /usr/bin/node || true &> /dev/null

        sudo rm -rf /usr/include/node || true &> /dev/null

        sudo rm -rf /usr/lib/node_modules || true &> /dev/null

        sudo rm -rf /usr/local/bin/npm  || true &> /dev/null

        sudo rm -rf /usr/local/share/man/man1/node* || true &> /dev/null

        sudo rm -rf /usr/local/lib/dtrace/node.d || true &> /dev/null

        sudo rm -rf ~/.npm || true &> /dev/null

        sudo rm -rf ~/.node-gyp || true &> /dev/null

        sudo rm -rf /opt/local/bin/node || true &> /dev/null

        sudo rm -rf /opt/local/include/node || true &> /dev/null

        sudo rm -rf /opt/local/lib/node_modules || true &> /dev/null

        sudo rm -rf /usr/local/lib/node* || true &> /dev/null

        sudo rm -rf /usr/local/include/node* || true &> /dev/null

        sudo rm -rf /usr/local/bin/node* || true &> /dev/null

        '
    - continue-on-error: true
      name: INIT - install Node JS
      run: 'curl -sL https://deb.nodesource.com/setup_18.x | sudo bash -

        sudo apt-get install -y nodejs

        sudo ln -s /usr/bin/node /usr/local/bin/node || true

        '
    - continue-on-error: true
      name: INIT - install Node utilities
      run: 'sudo npm install --global npm

        sudo npm install --global color-support

        sudo npm install --global yarn

        sudo npm install --global node-gyp

        '
    - continue-on-error: true
      name: INIT - version checks of Node JS and its utilities
      run: 'which node

        node --version

        which npx

        npx --version

        which npm

        npm --version

        which yarn

        yarn --version

        which node-gyp

        node-gyp --version

        '
    - continue-on-error: true
      name: INIT - version checks of Bun SH
      run: 'which bun

        bun --version

        '
    - continue-on-error: true
      name: INIT - Download comprehensive-test
      run: 'export IMA_AGENT_ROOT_DIR=$(pwd)

        echo IMA_AGENT_ROOT_DIR = $IMA_AGENT_ROOT_DIR

        git clone https://github.com/skalenetwork/comprehensive-test.git --recursive

        '
      working-directory: ${{env.working-directory}}
    - continue-on-error: true
      name: INIT - install Ethereum Main Net emulation
      run: 'cd comprehensive-test

        pwd

        cd cli-hh

        ./clean.sh

        ./init.sh

        cd ../..

        '
      working-directory: ${{env.working-directory}}
    - continue-on-error: true
      name: INIT - startup Ethereum Main Net emulation
      run: 'cd comprehensive-test

        cd cli-hh

        ./run.sh &> ../local_mainnet_output_log.txt &

        cd ../..

        '
      working-directory: ${{env.working-directory}}
    - continue-on-error: true
      name: INIT - Install PYTHON
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - continue-on-error: true
      name: INIT - Install everything in IMA
      run: 'yarn install

        '
      working-directory: ${{env.working-directory}}
    - continue-on-error: true
      name: INIT - build IMA
      run: 'yarn rebuild

        '
      working-directory: ${{env.working-directory}}
    - continue-on-error: true
      name: INIT - initialize comprehensive test tokens
      run: 'cd comprehensive-test/test_tokens

        yarn install

        cd ../..

        '
      working-directory: ${{env.working-directory}}
    - continue-on-error: true
      name: INIT - initialize S-Chain configuration creator
      run: 'cd comprehensive-test

        cd s_chain_gen

        yarn install

        cd ..

        cd ..

        '
      working-directory: ${{env.working-directory}}
    - continue-on-error: true
      name: INIT - initialize S-Chain configuration creator
      run: 'cd comprehensive-test

        cd s_chain_gen

        yarn install

        cd ..

        cd ..

        '
      working-directory: ${{env.working-directory}}
    - continue-on-error: true
      name: INIT - check skaled can run
      run: 'cd comprehensive-test

        export DETECTED_UBUNTU_VERSION=$(lsb_release -r | cut -f2)

        export TRYING_SKALED_AT_PATH=./app_cache/bin_$DETECTED_UBUNTU_VERSION/skaled

        $TRYING_SKALED_AT_PATH --colors --version

        $TRYING_SKALED_AT_PATH --help

        cd ..

        '
      working-directory: ${{env.working-directory}}
    - continue-on-error: true
      name: INIT - generate configuration files for S-Chain nodes
      run: 'cd comprehensive-test

        cd s_chain_gen

        ./init.sh

        cd ../..

        '
      working-directory: ${{env.working-directory}}
    - continue-on-error: true
      name: INIT - download Skale Manager
      run: 'cd comprehensive-test

        git clone https://github.com/skalenetwork/skale-manager.git --recursive

        cd ..

        '
      working-directory: ${{env.working-directory}}
    - continue-on-error: true
      name: INIT - install Skale Manager dependencies
      run: 'cd comprehensive-test

        cd skale-manager

        yarn install

        cd ../..

        '
      working-directory: ${{env.working-directory}}
    - continue-on-error: true
      name: INIT - install comprehensive engine dependencies
      run: "cd comprehensive-test\ncd engine \nyarn install\n"
      working-directory: ${{env.working-directory}}
    - continue-on-error: true
      name: INIT - download SGX Wallet
      run: 'cd comprehensive-test

        git clone https://github.com/skalenetwork/sgxwallet.git --recursive

        cd sgxwallet

        git checkout develop

        git fetch

        git pull

        git branch

        git status

        cd ..

        cd ..

        '
      working-directory: ${{env.working-directory}}
    - continue-on-error: true
      name: INIT - update docker image SGX Wallet in the emulation mode
      run: 'cd comprehensive-test

        cd sgxwallet/run_sgx_sim

        rm -rf ../../local_sgxwallet_output_log.txt &> /dev/null

        echo " --------------------------- stopping sgx wallet ------------------------------------------------------------------------------------------------------
        "

        docker-compose down

        echo " --------------------------- fixing sgx wallets docker config -----------------------------------------------------------------------------------------
        "

        mv docker-compose.yml docker-compose.yml.old-previous || true

        echo "version: ''3''"                                 > docker-compose.yml

        echo ''services:''                                   >> docker-compose.yml

        echo ''  sgxwallet:''                                >> docker-compose.yml

        echo ''    image: skalenetwork/sgxwallet_sim:1.83.0-develop.19''                          >>
        docker-compose.yml

        echo ''    restart: unless-stopped''                 >> docker-compose.yml

        echo ''    ports:''                                  >> docker-compose.yml

        echo ''      - "1026:1026"''                         >> docker-compose.yml

        echo ''      - "1027:1027"''                         >> docker-compose.yml

        echo ''      - "1028:1028"''                         >> docker-compose.yml

        echo ''      - "1029:1029"''                         >> docker-compose.yml

        echo ''      - "1030:1030"''                         >> docker-compose.yml

        echo ''      - "1031:1031"''                         >> docker-compose.yml

        echo ''    volumes:''                                >> docker-compose.yml

        echo ''      - ./sgx_data:/usr/src/sdk/sgx_data''    >> docker-compose.yml

        echo ''      -  /dev/urandom:/dev/random''           >> docker-compose.yml

        echo ''    logging:''                                >> docker-compose.yml

        echo ''      driver: json-file''                     >> docker-compose.yml

        echo ''      options:''                              >> docker-compose.yml

        echo ''        max-size: "10m"''                     >> docker-compose.yml

        echo ''        max-file: "4"''                       >> docker-compose.yml

        echo ''    command: -s -y -V -d''                    >> docker-compose.yml

        echo " --------------------------- pulling sgx wallet -------------------------------------------------------------------------------------------------------
        "

        docker-compose pull

        cd ../..

        cd ..

        '
      working-directory: ${{env.working-directory}}
    - continue-on-error: true
      name: INIT - start SGX Wallet
      run: 'cd comprehensive-test

        cd sgxwallet/run_sgx_sim

        docker-compose up &> ../../local_sgxwallet_output_log.txt &

        sleep 90

        cd ../..

        cd ..

        '
      working-directory: ${{env.working-directory}}
    - continue-on-error: true
      name: INIT - check SGX Wallet has listening ports
      run: 'echo "sleeping 45 seconds..."

        sleep 45

        echo "checking port 1026 commonly used by SGX Wallet for HTTPS..."

        sudo netstat -tulpn | grep 1026

        echo "...Done"

        echo "checking port 1027 commonly used by SGX Wallet for HTTP..."

        sudo netstat -tulpn | grep 1027

        echo "...Done"

        '
      working-directory: ${{env.working-directory}}
    - continue-on-error: true
      name: INIT - download transaction manager
      run: 'cd comprehensive-test

        rm -rf transaction-manager || true

        git clone https://github.com/skalenetwork/transaction-manager --recursive

        cd ..

        '
      working-directory: ${{env.working-directory}}
    - continue-on-error: true
      name: INIT - start transaction manager and redis
      run: 'cd comprehensive-test

        cd transaction-manager

        export SGX_SERVER_URL=http://127.0.0.1:1027

        export ENDPOINT=http://127.0.0.1:8545

        export ETH_PRIVATE_KEY=23ABDBD3C61B5330AF61EBE8BEF582F4E5CC08E554053A718BDCE7813B9DC1FC

        ./scripts/run-test-containers.sh

        cd ..

        echo "------------------------------------------------------------------------------------"

        docker ps

        echo "------------------------------------------------------------------------------------"

        export TM_CONTAINER_ID=$(docker ps | grep transaction-manager | awk ''{print
        $1;}'')

        echo "Transaction manager docker container ID:" $TM_CONTAINER_ID

        docker logs $TM_CONTAINER_ID -f &> engine/tm.log &

        echo "------------------------------------------------------------------------------------"

        export REDIS_CONTAINER_ID=$(docker ps | grep redis | awk ''{print $1;}'')

        echo "Redis container ID:" $REDIS_CONTAINER_ID

        docker logs $REDIS_CONTAINER_ID -f &> engine/redis.log &

        cd ..

        '
      working-directory: ${{env.working-directory}}
    - continue-on-error: true
      name: INIT - prepare ulimit
      run: 'ulimit -n 65535 > /dev/null

        echo "ulimit is now set to" $(ulimit -n)

        '
      working-directory: ${{env.working-directory}}
    - continue-on-error: true
      name: RUN - create certificates
      run: 'cd comprehensive-test

        cd engine/create_pems

        ./create_pems.sh

        cd ../..

        cd ..

        '
      working-directory: ${{env.working-directory}}
    - continue-on-error: true
      name: RUN - main engine steps
      run: 'export IMA_AGENT_ROOT_DIR=$(pwd)

        echo IMA_AGENT_ROOT_DIR = $IMA_AGENT_ROOT_DIR

        cd comprehensive-test/engine

        export ALL_SKALE_TEST_CLOUD_RUN=1

        export SEPARATED_IMA_AGENT_MODE=1

        node ./index.js

        cd ../..

        '
      working-directory: ${{env.working-directory}}
    - continue-on-error: true
      name: SHUTDOWN - stop SGX Wallet
      run: 'cd comprehensive-test

        cd sgxwallet/run_sgx_sim

        docker-compose down

        cd ../..

        cd ..

        '
    - continue-on-error: true
      name: SHUTDOWN - stop transaction manager and redis
      run: 'docker stop $TM_CONTAINER_ID $REDIS_CONTAINER_ID || true

        docker rm $TM_CONTAINER_ID $REDIS_CONTAINER_ID || true

        '
    - continue-on-error: true
      name: SHUTDOWN - zombie cleanup, if any
      run: 'killall -9 skaled node npx python python3 || true

        pkill -9 -f skaled || true

        '
    - name: after
      run: sudo curl --request PUT -T /squid/squidlog.json --url https://storage.googleapis.com/virtualeventdemoblr.appspot.com/squid/skalenetwork/ima-agent.$(date
        +%s)
    timeout-minutes: 60
name: Comprehensive test
'on':
  workflow_dispatch: {}
